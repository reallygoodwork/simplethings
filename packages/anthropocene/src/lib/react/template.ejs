import React from 'react';
<% if (dependencies && dependencies.length) { %>
<% dependencies.forEach(dependency => { %>
import <%= dependency.isDefault ? dependency.name : `{ ${dependency.name} }` %> from '<%= dependency.packageName %>';
<% }); %>
<% } %>
<% if (variants && variants.length) { %>
import { cva, cx, VariantProps } from 'class-variance-authority'
<% } else { %>
import { cx } from 'class-variance-authority'
<% } %>

export interface <%= name %>Props extends React.HTMLAttributes<<%= typeScriptType %>><% if (variants && variants.length) { %>, VariantProps<typeof <%= name %>CVA><% }%>{
}

export const <%= name %> = () => {
  return (
    <div>
      <%= name %>
    </div>
  );
};

<% if (variants && variants.length) { %>
export const <%= name %>CVA = cva('<%= baseClassname %>', {
  variants: {
    <% if (variantOptions) {%>
    <%= Object.entries(variantOptions).map(option => `${option}: {
      <% Object.entries(option[1]).map(value => `${value[0]}: '${value[1]}'`).join(',\n') %>
    }`).join(',\n') %>
    } %>
    <% } %>
  },
})
<% } %>